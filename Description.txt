1. get_data.py

    -> random user details are aquired from an api 'random user' e.g;
        - Name, gender, date of birth, age, raw mpesa balance, mpesa pin, date in which mpesa account was created. 
    -> Using a json file random towns from Kenya are inserted into the code e.g.;
        - Place of birth
    -> Using random python module e.g.;
        - Phone number

2. simulate_transactions.py 

    -> The quintessential of the code is to run for a specified duration of time simulating real life transactions between users. based on the 
    user's mpesa balance, the transactions are simulated. e.g.;
        ('deposit', 0.15, "Cash deposit from agent"),
        ('withdrawal', 0.15, "Cash withdrawal from agent"),
        ('send', 0.25, "Money sent to another user"),
        ('receive', 0.25, "Money received from another user"),
        ('airtime', 0.10, "Airtime purchase"),
        ('lipa na mpesa', 0.05, "Lipa Na MPESA payment"),
        ('paybill', 0.04, "Paybill payment"),
        ('pochi la biashara', 0.01, "Pochi La Biashara deposit")

    FUNCTIONS
    a. get_random_users() -> Retrieves a number of random users based on the argument count from the database.
    b. get_random_amount() -> Calculates the probability of the amount a user might transact based on his current balance.
    c. select_transaction_type() -> Based on the probability a random transaction and description is selected based on what most users
                                    transact daily.
    d. process_transaction() ->
    e. generate_random_transaction() -> Initiates the functions; get_random_users(), get_random_amount(), select_transaction_type()
                                        and process_transaction().

                                     -> By checking the random transaction type that has been generated by select_transaction_type()
                                        function. The function generates a transaction and sends the information to the function
                                        process_transaction() for input into the database.
    f. run_simulation() -> a set amount of max time and max transactions are set for the transaction to run.

3. check_phone_number_duplicates.py

4. create_tables.sql

5. database_connector.py

6. delete_database.sql

7. main.py

8. transactions.py

9. ui.py